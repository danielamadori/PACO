name: Release

on:
  release:
    types: [published]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for server
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/paco-server:${{ github.ref_name }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/paco-server:${{ github.ref_name }}

      - name: Update release with Docker image links
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_id=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }} | jq -r .id)
          server_docker_image_url="https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/paco-server/tags?page=1&name=${{ github.ref_name }}"
          release_body="To use the server image:\n\n\
          docker pull ${{ secrets.DOCKER_USERNAME }}/paco-server:${{ github.ref_name }}\n\
          docker run -d -p 8050:8050 -it --name PACO_SERVER ${{ secrets.DOCKER_USERNAME }}/paco-server:${{ github.ref_name }}\n\
          docker logs PACO_SERVER\n\n\
          Docker image available at [link](${server_docker_image_url})\n\n\
          
          curl -s \
            -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d "{\"body\": \"${release_body}\"}" \
            https://api.github.com/repos/${{ github.repository }}/releases/${release_id}